/*
void buu(string bo){

return 1 != 2 || 3 <= 4;
}

int buu(string bo){


}

int call(float a){

return 2;
}

int test_func(){

string a;

return a;
}

int path_test(){
	int a;
	int b;
	string c;
	
	if(1<2){

	}else{
		return 2;
	}
}

int path_test_2(){

}

int path_test_3(){
	int a;
}

int path_test_4(){
	int a;
	return 1;
}

int path_test_5(){
	if(1<2){
		return true;
	}else{
		return 2;
	}
}

int path_test_6(){
	if(1<2){
		return true;
	}else{
		int c;
	}
}

int path_test_7(){
	if(1<2){
		return true;
	}else{
		int c;
	}
	return 3;
}

int path_test_8(){
	if(1<2){
		return 1;
	}else{
		int c;
	}
	return 3;
}

int path_test_9(){
	if(1<2){
		int a;
	}else{
		int c;
	}
	return 3;
}

int path_test_10(){
	if(1<2){
		return "3";
	}else{
		return 1;
	}
}

string path_test_11(){
	if(1<2){
		while(1){}
		if("true"){}
	}else{

	}
	return "2";
}


void main(){	
	int a;
	string b;
	int d;
	int[10] bo;
	bool c;
	
	c=true;
	a= a + 2 + d + 4 * 3 + d - b;
	a=6;
	bo["2"]=3;
	
	a=buuddd("test");
	d=call();
	d=call(1,2,3,4);
	d=call(b);
	
	if(a==12){
		int c;
	} else{
		int d;
	}

	while(!c >= c){}
	while(!c == c){}
	while(1 != 2) {}
	while(1 || 2) {}	
	while(c && !c) {}
	while(c || !c) {}
	
	return;	
}

bool test(){

	if(true){
		if(true){
			int a;
		}else{
			if(true){
				return true;
			}else{
				int c;
			}
		}
	}else{
		if(true){
			if(true){
				return true;
			}else{
				int a;
				a=23;
				return false;
			}
		}else{
			int i;
		}
	}
	return !true || false && !(1==1);
}

int bo(){
return 1;
}
*/

void main(){
/*
	int[3] test_arr;
	int boo;
	
	test_arr=boo;
	test_arr=3;
	test_arr[0]=3+2;
	
	boo=test_arr[2]+2+bo[0]+bo;
*/	
	return;
}